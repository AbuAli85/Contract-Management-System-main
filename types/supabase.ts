// This file will be generated by the Supabase CLI.
// Run: npx supabase gen types typescript --project-id <YOUR_PROJECT_REF> --schema public > types/supabase.ts
// Or for local dev: npx supabase gen types typescript --local > types/supabase.ts

// Example of what it might contain (will be much more extensive):
export type Json = string | number | boolean | null | { [key: string]: Json | undefined } | Json[]

export type Database = {
  public: {
    Tables: {
      audit_logs: {
        Row: {
          id: string
          user_id: string | null
          action: string
          resource_type: string | null
          resource_id: string | null
          details: Json | null
          created_at: string
        }
        Insert: {
          id?: string
          user_id?: string | null
          action: string
          resource_type?: string | null
          resource_id?: string | null
          details?: Json | null
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string | null
          action?: string
          resource_type?: string | null
          resource_id?: string | null
          details?: Json | null
          created_at?: string
        }
        Relationships: []
      }
      contracts: {
        Row: {
          id: string
          title: string
          content: string | null
          status: string
          created_at: string
          updated_at: string
          created_by: string | null
          party_a_id: string | null
          party_b_id: string | null
          contract_type: string | null
          effective_date: string | null
          expiration_date: string | null
          value: number | null
          currency: string | null
          template_id: string | null
        }
        Insert: {
          id?: string
          title: string
          content?: string | null
          status?: string
          created_at?: string
          updated_at?: string
          created_by?: string | null
          party_a_id?: string | null
          party_b_id?: string | null
          contract_type?: string | null
          effective_date?: string | null
          expiration_date?: string | null
          value?: number | null
          currency?: string | null
          template_id?: string | null
        }
        Update: {
          id?: string
          title?: string
          content?: string | null
          status?: string
          created_at?: string
          updated_at?: string
          created_by?: string | null
          party_a_id?: string | null
          party_b_id?: string | null
          contract_type?: string | null
          effective_date?: string | null
          expiration_date?: string | null
          value?: number | null
          currency?: string | null
          template_id?: string | null
        }
        Relationships: []
      }
      notifications: {
        Row: {
          id: string
          type: string
          message: string
          user_id: string | null
          created_at: string
          is_read: boolean
          data: Json | null
        }
        Insert: {
          id?: string
          type: string
          message: string
          user_id?: string | null
          created_at?: string
          is_read?: boolean
          data?: Json | null
        }
        Update: {
          id?: string
          type?: string
          message?: string
          user_id?: string | null
          created_at?: string
          is_read?: boolean
          data?: Json | null
        }
        Relationships: []
      }
      parties: {
        Row: {
          id: string
          name: string
          email: string | null
          phone: string | null
          address: string | null
          type: string | null
          created_at: string
          updated_at: string
          created_by: string | null
          status: string | null
          contact_person: string | null
          tax_id: string | null
          registration_number: string | null
        }
        Insert: {
          id?: string
          name: string
          email?: string | null
          phone?: string | null
          address?: string | null
          type?: string | null
          created_at?: string
          updated_at?: string
          created_by?: string | null
          status?: string | null
          contact_person?: string | null
          tax_id?: string | null
          registration_number?: string | null
        }
        Update: {
          id?: string
          name?: string
          email?: string | null
          phone?: string | null
          address?: string | null
          type?: string | null
          created_at?: string
          updated_at?: string
          created_by?: string | null
          status?: string | null
          contact_person?: string | null
          tax_id?: string | null
          registration_number?: string | null
        }
        Relationships: []
      }
      permissions: {
        Row: {
          id: string
          name: string
          description: string | null
          created_at: string
        }
        Insert: {
          id?: string
          name: string
          description?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          name?: string
          description?: string | null
          created_at?: string
        }
        Relationships: []
      }
      profiles: {
        Row: {
          id: string
          email: string | null
          full_name: string | null
          avatar_url: string | null
          created_at: string
          updated_at: string
          is_active: boolean | null
          role: string | null
          last_login: string | null
        }
        Insert: {
          id: string
          email?: string | null
          full_name?: string | null
          avatar_url?: string | null
          created_at?: string
          updated_at?: string
          is_active?: boolean | null
          role?: string | null
          last_login?: string | null
        }
        Update: {
          id?: string
          email?: string | null
          full_name?: string | null
          avatar_url?: string | null
          created_at?: string
          updated_at?: string
          is_active?: boolean | null
          role?: string | null
          last_login?: string | null
        }
        Relationships: []
      }
      promoters: {
        Row: {
          id: string
          name: string
          email: string | null
          phone: string | null
          address: string | null
          created_at: string
          updated_at: string
          created_by: string | null
          status: string | null
          specialization: string | null
          experience_years: number | null
          portfolio_url: string | null
          hourly_rate: number | null
          availability: string | null
        }
        Insert: {
          id?: string
          name: string
          email?: string | null
          phone?: string | null
          address?: string | null
          created_at?: string
          updated_at?: string
          created_by?: string | null
          status?: string | null
          specialization?: string | null
          experience_years?: number | null
          portfolio_url?: string | null
          hourly_rate?: number | null
          availability?: string | null
        }
        Update: {
          id?: string
          name?: string
          email?: string | null
          phone?: string | null
          address?: string | null
          created_at?: string
          updated_at?: string
          created_by?: string | null
          status?: string | null
          specialization?: string | null
          experience_years?: number | null
          portfolio_url?: string | null
          hourly_rate?: number | null
          availability?: string | null
        }
        Relationships: []
      }
      roles: {
        Row: {
          id: string
          name: string
          description: string | null
          created_at: string
        }
        Insert: {
          id?: string
          name: string
          description?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          name?: string
          description?: string | null
          created_at?: string
        }
        Relationships: []
      }
      role_permissions: {
        Row: {
          id: string
          role_id: string
          permission_id: string
          created_at: string
        }
        Insert: {
          id?: string
          role_id: string
          permission_id: string
          created_at?: string
        }
        Update: {
          id?: string
          role_id?: string
          permission_id?: string
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "role_permissions_permission_id_fkey"
            columns: ["permission_id"]
            isOneToOne: false
            referencedRelation: "permissions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "role_permissions_role_id_fkey"
            columns: ["role_id"]
            isOneToOne: false
            referencedRelation: "roles"
            referencedColumns: ["id"]
          },
        ]
      }
      user_permissions: {
        Row: {
          id: string
          user_id: string
          permission_id: string
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          permission_id: string
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          permission_id?: string
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "user_permissions_permission_id_fkey"
            columns: ["permission_id"]
            isOneToOne: false
            referencedRelation: "permissions"
            referencedColumns: ["id"]
          },
        ]
      }
      user_roles: {
        Row: {
          id: string
          user_id: string
          role_id: string
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          role_id: string
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          role_id?: string
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "user_roles_role_id_fkey"
            columns: ["role_id"]
            isOneToOne: false
            referencedRelation: "roles"
            referencedColumns: ["id"]
          },
        ]
      }
      users: {
        Row: {
          id: string
          email: string
          role: string | null
          created_at: string
          updated_at: string
          is_active: boolean | null
          last_login: string | null
        }
        Insert: {
          id: string
          email: string
          role?: string | null
          created_at?: string
          updated_at?: string
          is_active?: boolean | null
          last_login?: string | null
        }
        Update: {
          id?: string
          email?: string
          role?: string | null
          created_at?: string
          updated_at?: string
          is_active?: boolean | null
          last_login?: string | null
        }
        Relationships: []
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      get_dashboard_analytics: {
        Args: Record<PropertyKey, never>
        Returns: Json
      }
      files_per_month: {
        Args: Record<PropertyKey, never>
        Returns: Json
      }
      get_user_effective_permissions: {
        Args: {
          user_id: string
        }
        Returns: {
          permission_id: string
          permission_name: string
          permission_description: string
          source: string
        }[]
      }
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

export type Tables<
  PublicTableNameOrOptions extends
    | keyof (Database["public"]["Tables"] & Database["public"]["Views"])
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
        Database[PublicTableNameOrOptions["schema"]]["Views"])
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
      Database[PublicTableNameOrOptions["schema"]]["Views"])[TableName] extends {
      Row: infer R
    }
    ? R
    : never
  : PublicTableNameOrOptions extends keyof (Database["public"]["Tables"] & Database["public"]["Views"])
    ? (Database["public"]["Tables"] & Database["public"]["Views"])[PublicTableNameOrOptions] extends {
        Row: infer R
      }
      ? R
      : never
    : never

export type TablesInsert<
  PublicTableNameOrOptions extends keyof Database["public"]["Tables"] | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Insert: infer I
    }
    ? I
    : never
  : PublicTableNameOrOptions extends keyof Database["public"]["Tables"]
    ? Database["public"]["Tables"][PublicTableNameOrOptions] extends {
        Insert: infer I
      }
      ? I
      : never
    : never

export type TablesUpdate<
  PublicTableNameOrOptions extends keyof Database["public"]["Tables"] | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Update: infer U
    }
    ? U
    : never
  : PublicTableNameOrOptions extends keyof Database["public"]["Tables"]
    ? Database["public"]["Tables"][PublicTableNameOrOptions] extends {
        Update: infer U
      }
      ? U
      : never
    : never

export type Enums<
  PublicEnumNameOrOptions extends keyof Database["public"]["Enums"] | { schema: keyof Database },
  EnumName extends PublicEnumNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicEnumNameOrOptions["schema"]]["Enums"]
    : never = never,
> = PublicEnumNameOrOptions extends { schema: keyof Database }
  ? Database[PublicEnumNameOrOptions["schema"]]["Enums"][EnumName]
  : PublicEnumNameOrOptions extends keyof Database["public"]["Enums"]
    ? Database["public"]["Enums"][PublicEnumNameOrOptions]
    : never
